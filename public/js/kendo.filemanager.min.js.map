{"version":3,"sources":["kendo.filemanager.js"],"names":["f","define","$","undefined","kendo","window","extend","Class","Command","init","options","this","filemanager","CreateFolderCommand","fn","call","exec","that","dataSource","_viewDataSource","add","RenameCommand","target","viewItem","_view","widgetComponent","dataItem","edit","_renameTreeViewItem","uid","data","item","treeView","getByUid","realItem","get","id","_prompt","name","done","newName","set","DeleteCommand","items","getSelected","is","length","_confirm","i","remove","CopyCommand","targetDataSource","children","toJSON","fileManagerNewItem","MoveCommand","cloning","SortCommand","sortOptions","defaultSortOption","dir","field","sort","folderSortOption","SearchCommand","filter","operator","value","ChangeViewCommand","view","resize","OpenDialogCommand","dialog","type","open","console","warn","format","TogglePaneCommand","pane","resizable","getResizable","toggle","wrapper","find","handle","_resizeDraggable","ui","commands","jQuery","amd","a1","a2","a3","ListView","TreeView","Grid","Observable","proxy","NAVIGATE","SELECT","EXPAND","CHANGE","OPEN","LOAD","KEYDOWN","KEYDOWNACTION","NS","fileManagerDraggables","fileManagerDragOrigin","registerViewComponent","componentName","component","ViewComponents","getViewComponent","Component","widget","element","Error","_bindEvents","bind","_binding","_bound","ev","trigger","preventDefault","_setDSOptions","dataSourceOptions","_initDragAndDrop","dropFilter","draggable","kendoDraggable","hint","_hint","cursorOffset","top","left","holdToDrag","ignore","hold","_hold","userEvents","minHold","droptarget","kendoDropTargetArea","drop","_onDrop","dragenter","dropTarget","addClass","dragleave","removeClass","currentTarget","selectable","clear","select","cancel","selectedItems","messages","isDirectory","targetId","itemIds","push","refresh","setDataSource","destroy","ViewComponent","explicitOptions","defaultOptions","listView","isLocalBinding","support","mobileOS","template","editTemplate","navigatable","_select","on","_dblClick","_mousedown","_keydown","_keydownAction","sender","_closeEditable","dataItems","entries","keyCode","keys","ESC","node","closest","which","entry","addFolder","selected","off","dataTextField","_refreshDataSource","existingItem","action","parentNode","map","guid","hasChildren","findByUid","_progress","each","index","append","_remove","_navigate","_expand","entryId","path","noop","selectedItem","reload","read","_setupColumns","grid","editable","mode","confirmation","sortable","columns","title","nameField","icon","getFileGroup","extension","dateCreatedField","sizeField","size","getFileSizeMessage","table","_toggleFocusable","saveRow","ENTER","setTimeout","_tryCancel","cancelChanges","container","_editContainer","val","state","addBack","toggleClass","model","dirty","_destroyEditable","_displayRow","addRow","editRow","FileManagerDetailsToggle","ToolBar","Item","toolbar","CLICK","TOGGLE","CLOSE","ACTION","FileManagerToolBar","_extendOptions","_attachEvents","events","defaultTools","createFolder","text","command","rules","upload","sortDirection","buttons","togglable","group","sortField","menuButtons","changeView","spacer","details","overflow","search","_click","_change","tools","Object","_extendToolsOptions","tool","toolOptions","toolRules","isBuiltInTool","isPlainObject","JSON","parse","deepExtend","attributes","aria-label","data-command","data-options","_mapButtonGroups","_mapMenuButtons","remote","hidden","button","initialView","isToolEnabled","toolName","found","args","fileManagerSearch","SearchTool","input","iconWrapper","renderIcon","addUidAttr","addIdAttr","addOverflowAttr","attr","placeholder","_inputHandler","_input","registerComponent","label","switchElement","switchInstance","Switch","change","checked","detailsChecked","unchecked","detailsUnchecked","fileManagerDetailsToggle","parent","FileEntry","FileManagerDataSource","Node","HierarchicalDataSource","DataSource","schemas","fields","defaultValue","hasDirectories","created","createdUtc","modified","modifiedUtc","isDirectoryObject","getter","isFunction","_initChildren","transport","parameterMap","_childrenOptions","e","collection","_updateChildrenField","isNew","_defaultId","fileEntry","serverFiltering","_hierarchicalFilter","schema","modelBase","LocalTransport","_attachBubbleHandlers","insert","result","_hasDirectories","create","_dataSource","ContextMenu","FileManagerContextMenu","_overrideTemplates","_extendItems","_onSelect","templates","sprite","defaultItems","rename","spriteCssClass","delete","key","_extendItem","isArray","DataBoundWidget","outerHeight","_outerHeight","ERROR","UPLOAD","SUCCESS","DATABINDING","DATABOUND","DROP","EXECUTE","TREE_TYPE","DOT","fileManagerStyles","header","navigation","navigationContainer","contentContainer","content","preview","previewContainer","treeview","breadcrumb","list","uploadDialog","splitBar","splitBarHorizontal","splitBarHover","splitBarIcon","splitBarNavigation","splitBarPreview","fileManagerTemplateStyles","fileInfo","filePreviewWrapper","fileTitleWrapper","fileTitle","fileMetaWrapper","metaLabel","metaValue","NO_FILE_PREVIEW_TEMPLATE","SINGLE_FILES_PREVIEW_TEMPLATE","MULTIPLE_FILES_PREVIEW_TEMPLATE","FileManager","_hasUpload","uploadUrl","async","saveUrl","_wrapper","_renderHeader","_renderContentContainer","_initContextMenu","_renderNavigation","_renderContent","_renderPreview","_initUploadDialog","_resizable","notify","height","contextMenu","views","dialogs","width","moveConfirm","closable","deleteConfirm","renamePrompt","previewPane","metaFields","noFileTemplate","singleFileTemplate","multipleFilesTemplate","sortDirectionAsc","sortDirectionDesc","typeField","dateModifiedField","gridView","okText","close","noFileSelected","typeSortOrder","nameSortOrder","autoSync","_errorHandler","unbind","_changeHandler","_error","xhr","status","statusText","_resizeHandler","onResize","_initToolbar","menuOptions","executeCommand","_initTreeView","_initBreadcrumb","_initUpload","_initView","enablePreview","_setPreviewPaneContent","hide","previewTemplate","previewPaneMessages","previewPaneOptions","selection","styles","html","toolbarElement","toolbarOptions","treeViewElement","_load","_drop","indexOf","fail","DELETE","F2","_viewType","confirm","kendoConfirm","defaultInput","prompt","kendoPrompt","viewWrapper","breadcrumbElement","breadcrumbOptions","_breadcrumbChange","Breadcrumb","uploadInstance","dialogMessages","dialogElement","dialogOptions","modal","visible","actions","_clearUploadFilesList","primary","Dialog","_toggleUploadDropZone","uploadElement","uploadOptions","autoUpload","dropZone","Upload","_sendUploadPathParameter","_success","clearAllFiles","zone","setOptions","source","_createResizableSplitBar","cssClass","hover","_initResizableNavigation","contentWrapperWidth","navigationWrapperWidth","contentWrapper","navigationWrapper","insertAfter","end","kendoResizable","start","delta","x","initialDelta","isRtl","getKendoResizable","_initResizablePreview","previewWrapperWidth","previewWrapper","insertBefore","empty","_open","el","join","commandName","commandOptions","navigate","load","parentNodePath","sync","_buildBreadcrumbPath","values","reverse","_adjustDimensions","gridSelector","listViewSelector","totalHeight","toolbarHeight","breadcrumbHeight","_resize","getSize","dimensions","_path","replace","loaded","unbindResize","plugin"],"mappings":"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","file":"kendo.filemanager.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('filemanager/commands', ['kendo.core'], f);\n}(function () {\n    (function ($, undefined) {\n        var kendo = window.kendo, extend = $.extend, Class = kendo.Class;\n        var Command = Class.extend({\n            init: function (options) {\n                this.options = options;\n                this.filemanager = options.filemanager;\n            }\n        });\n        var CreateFolderCommand = Command.extend({\n            init: function (options) {\n                Command.fn.init.call(this, options);\n            },\n            exec: function () {\n                var that = this, filemanager = that.filemanager, dataSource = filemanager._viewDataSource || filemanager.dataSource;\n                dataSource.add();\n            }\n        });\n        var RenameCommand = Command.extend({\n            init: function (options) {\n                Command.fn.init.call(this, options);\n            },\n            exec: function () {\n                var that = this, target = that.options.target, viewItem = that.filemanager._view.widgetComponent.dataItem(target);\n                if (target && viewItem) {\n                    that.filemanager._view.edit(target);\n                } else {\n                    that._renameTreeViewItem(target);\n                }\n            },\n            _renameTreeViewItem: function (target) {\n                var that = this, uid = target.data('uid'), item = that.filemanager.treeView.widgetComponent.dataSource.getByUid(uid), realItem = that.filemanager.dataSource.get(item.id);\n                that.filemanager._prompt('rename', realItem.name).done(function (newName) {\n                    realItem.set('name', newName);\n                });\n            }\n        });\n        var DeleteCommand = Command.extend({\n            init: function (options) {\n                Command.fn.init.call(this, options);\n            },\n            exec: function () {\n                var that = this, target = that.options.target, filemanager = that.filemanager, items = filemanager.getSelected(), viewItem = that.filemanager._view.widgetComponent.dataItem(target);\n                if (target && target.is('.k-state-selected') && items && items.length) {\n                    filemanager._confirm('delete').done(function () {\n                        for (var i = 0; i < items.length; i++) {\n                            filemanager.dataSource.remove(items[i]);\n                        }\n                    });\n                } else if (target && viewItem) {\n                    filemanager._confirm('delete').done(function () {\n                        filemanager.dataSource.remove(viewItem);\n                    });\n                } else if (target) {\n                    var uid = target.data('uid');\n                    var item = that.filemanager.treeView.widgetComponent.dataSource.getByUid(uid);\n                    var realItem = that.filemanager.dataSource.get(item.id);\n                    filemanager._confirm('delete').done(function () {\n                        filemanager.dataSource.remove(realItem);\n                    });\n                }\n            }\n        });\n        var CopyCommand = Command.extend({\n            init: function (options) {\n                Command.fn.init.call(this, options);\n            },\n            exec: function () {\n                var that = this, filemanager = that.filemanager, dataSource = filemanager.dataSource, items = that.options.items, target = dataSource.get(that.options.target), targetDataSource = target.children;\n                for (var i = 0; i < items.length; i++) {\n                    var item = dataSource.get(items[i]).toJSON();\n                    item.fileManagerNewItem = true;\n                    targetDataSource.add(item);\n                }\n            }\n        });\n        var MoveCommand = Command.extend({\n            init: function (options) {\n                Command.fn.init.call(this, options);\n            },\n            exec: function () {\n                var that = this, filemanager = that.filemanager, dataSource = filemanager.dataSource, items = that.options.items, target = dataSource.get(that.options.target), targetDataSource = target.children;\n                for (var i = 0; i < items.length; i++) {\n                    var item = dataSource.get(items[i]);\n                    var cloning = item.toJSON();\n                    cloning.fileManagerNewItem = true;\n                    targetDataSource.add(cloning);\n                    dataSource.remove(item);\n                }\n            }\n        });\n        var SortCommand = Command.extend({\n            init: function (options) {\n                Command.fn.init.call(this, options);\n            },\n            exec: function () {\n                var that = this, options = that.options, filemanager = that.filemanager, sortOptions = filemanager.defaultSortOption;\n                extend(sortOptions, {\n                    dir: options.dir,\n                    field: options.field\n                });\n                filemanager._view.widgetComponent.dataSource.sort([\n                    filemanager.folderSortOption,\n                    sortOptions\n                ]);\n            }\n        });\n        var SearchCommand = Command.extend({\n            init: function (options) {\n                Command.fn.init.call(this, options);\n            },\n            exec: function () {\n                var that = this, options = that.options, filemanager = that.filemanager, filter = {\n                        field: options.field,\n                        operator: options.operator,\n                        value: options.value\n                    };\n                filemanager._view.widgetComponent.dataSource.filter(filter);\n            }\n        });\n        var ChangeViewCommand = Command.extend({\n            init: function (options) {\n                Command.fn.init.call(this, options);\n            },\n            exec: function () {\n                var that = this, options = that.options, filemanager = that.filemanager;\n                filemanager.view(options.value);\n                filemanager.resize(true);\n            }\n        });\n        var OpenDialogCommand = Command.extend({\n            init: function (options) {\n                Command.fn.init.call(this, options);\n            },\n            exec: function () {\n                var that = this, filemanager = that.filemanager, dialog = filemanager[that.options.type];\n                if (dialog) {\n                    dialog.open();\n                } else {\n                    window.console.warn(kendo.format('The {0} dialog is not available!', that.options.type));\n                }\n            }\n        });\n        var TogglePaneCommand = Command.extend({\n            init: function (options) {\n                Command.fn.init.call(this, options);\n            },\n            exec: function () {\n                var that = this, filemanager = that.filemanager, pane = filemanager[that.options.type], resizable = that.getResizable();\n                if (pane) {\n                    pane.toggle();\n                    if (resizable) {\n                        filemanager.wrapper.find(resizable.options.handle).toggle();\n                    }\n                }\n            },\n            getResizable: function () {\n                var that = this, filemanager = that.filemanager, type = that.options.type;\n                if (!filemanager._resizeDraggable) {\n                    return;\n                }\n                return filemanager._resizeDraggable[type];\n            }\n        });\n        extend(kendo.ui, {\n            filemanager: {\n                commands: {\n                    CreateFolderCommand: CreateFolderCommand,\n                    RenameCommand: RenameCommand,\n                    DeleteCommand: DeleteCommand,\n                    MoveCommand: MoveCommand,\n                    CopyCommand: CopyCommand,\n                    SortCommand: SortCommand,\n                    SearchCommand: SearchCommand,\n                    ChangeViewCommand: ChangeViewCommand,\n                    OpenDialogCommand: OpenDialogCommand,\n                    TogglePaneCommand: TogglePaneCommand\n                }\n            }\n        });\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('filemanager/view', [\n        'kendo.listview',\n        'kendo.treeview'\n    ], f);\n}(function () {\n    (function ($, undefined) {\n        var kendo = window.kendo, ui = kendo.ui, Observable = kendo.Observable, extend = $.extend, proxy = $.proxy, NAVIGATE = 'navigate', SELECT = 'select', EXPAND = 'expand', CHANGE = 'change', OPEN = 'open', LOAD = 'load', KEYDOWN = 'keydown', KEYDOWNACTION = 'keydownAction', NS = '.kendoFileManagerViewComponent', fileManagerDraggables = [], fileManagerDragOrigin = null;\n        var registerViewComponent = function (componentName, component) {\n            ui.filemanager.ViewComponents[componentName] = component;\n        };\n        var getViewComponent = function (componentName) {\n            return ui.filemanager.ViewComponents[componentName] || null;\n        };\n        var Component = Observable.extend({\n            init: function (widget, element, options) {\n                var that = this;\n                that.element = element;\n                that.options = options;\n                if (widget) {\n                    that.widgetComponent = new widget(element, options);\n                } else {\n                    throw new Error('The widget for the ViewComponent is not available! Please add the corresponding scripts!');\n                }\n                Observable.fn.init.call(that);\n            },\n            _bindEvents: function () {\n                this.widgetComponent.bind('dataBinding', proxy(this._binding, this));\n                this.widgetComponent.bind('dataBound', proxy(this._bound, this));\n            },\n            _binding: function (ev) {\n                if (this.trigger('dataBinding', ev)) {\n                    ev.preventDefault();\n                }\n            },\n            _bound: function () {\n                this.trigger('dataBound');\n            },\n            _setDSOptions: function (options, dataSourceOptions) {\n                if (!options.dataSource && dataSourceOptions) {\n                    options.dataSource = dataSourceOptions;\n                }\n            },\n            _initDragAndDrop: function (element, filter) {\n                var that = this;\n                filter = filter || that.options.dropFilter;\n                element = element || that.element;\n                that.draggable = element.kendoDraggable({\n                    filter: filter,\n                    hint: proxy(that._hint, that),\n                    cursorOffset: {\n                        top: -10,\n                        left: -50\n                    },\n                    holdToDrag: true,\n                    ignore: 'input,.k-focusable',\n                    hold: proxy(that._hold, that)\n                }).data('kendoDraggable');\n                that.draggable.userEvents.minHold = 150;\n                that.droptarget = element.kendoDropTargetArea({\n                    filter: filter,\n                    drop: proxy(that._onDrop, that),\n                    dragenter: function (ev) {\n                        ev.dropTarget.addClass('k-filemanager-drop-target');\n                    },\n                    dragleave: function (ev) {\n                        ev.dropTarget.removeClass('k-filemanager-drop-target');\n                    }\n                }).data('kendoDraggable');\n            },\n            _hold: function (ev) {\n                var that = this, target = ev.currentTarget;\n                if (!target.is('.k-state-selected')) {\n                    if (that.widgetComponent.selectable) {\n                        that.widgetComponent.selectable.clear();\n                    }\n                    that.widgetComponent.select(target);\n                }\n                if (that.widgetComponent.selectable) {\n                    that.widgetComponent.selectable.userEvents.cancel();\n                }\n            },\n            _hint: function (target) {\n                var that = this, item = that.widgetComponent.dataItem(target), selectedItems = that.widgetComponent.select();\n                fileManagerDragOrigin = that.widgetComponent;\n                fileManagerDraggables = selectedItems;\n                if (selectedItems.length > 1) {\n                    return kendo.format('<div class=\\'k-filemanager-drag-hint\\'><span class=\\'k-icon k-i-{0}\\'></span> <span>{1} {2}</span></div>', 'file', selectedItems.length, that.options.messages.items);\n                }\n                return kendo.format('<div class=\\'k-filemanager-drag-hint\\'><span class=\\'k-icon k-i-{0}\\'></span> <span>{1}</span></div>', item.isDirectory ? 'folder' : 'file', item.name);\n            },\n            _onDrop: function (ev) {\n                var that = this, target = that.widgetComponent.dataItem(ev.dropTarget), targetId = target.id, itemIds = [];\n                if (!target.isDirectory) {\n                    return;\n                }\n                for (var i = 0; i < fileManagerDraggables.length; i++) {\n                    var id = fileManagerDragOrigin.dataItem(fileManagerDraggables[i]).id;\n                    itemIds.push(id);\n                }\n                this.trigger('drop', {\n                    target: targetId,\n                    items: itemIds\n                });\n            },\n            getSelected: function () {\n                throw new Error('Not Implemented!');\n            },\n            refresh: function (dataSource) {\n                this.widgetComponent.setDataSource(dataSource);\n            },\n            destroy: function () {\n                kendo.destroy(this.element);\n            }\n        });\n        extend(kendo.ui.filemanager, {\n            ViewComponent: Component,\n            ViewComponents: {},\n            registerViewComponent: registerViewComponent,\n            getViewComponent: getViewComponent\n        });\n        var ListView = Component.extend({\n            init: function (element, options, explicitOptions) {\n                var that = this, dataSourceOptions = explicitOptions.dataSource, messages = explicitOptions.messages;\n                options = extend({}, that.defaultOptions, options, { messages: messages });\n                that._setDSOptions(options, dataSourceOptions);\n                Component.fn.init.call(this, ui.ListView, element, options);\n                that.listView = that.widgetComponent;\n                that._bindEvents();\n                if (explicitOptions.draggable !== false && !dataSourceOptions.isLocalBinding) {\n                    that._initDragAndDrop();\n                }\n            },\n            defaultOptions: {\n                selectable: kendo.support.mobileOS ? 'row' : 'multiple',\n                template: '<div class=\\'k-item\\' title=\\'#:name##:extension#\\'>' + '<div class=\\'file-group-icon\\'><span class=\\'k-icon k-i-#=kendo.getFileGroup(extension, true)#\\'></span></div>' + '<div class=\\'file-name\\'>#:name##:extension#</div>' + '</div>',\n                editTemplate: '<div class=\\'k-item\\'>' + '<div class=\\'file-group-icon\\'><span class=\\'k-icon k-i-#=kendo.getFileGroup(extension, true)#\\'></span></div>' + '<div class=\\'file-edit-input\\'><input type=\\'text\\' class=\\'k-textbox\\' data-bind=\\'value:name\\' name=\\'name\\' required=\\'required\\' /></div>' + '</div>',\n                dropFilter: '.k-item',\n                navigatable: true\n            },\n            _bindEvents: function () {\n                var that = this, listView = that.listView;\n                listView.bind(CHANGE, proxy(that._select, that));\n                listView.element.on('dblclick' + NS, proxy(that._dblClick, that));\n                listView.element.on('mousedown' + NS, '.k-item:not(.k-edit-item)', proxy(that._mousedown, that));\n                listView.element.on(KEYDOWN + NS, '.k-edit-item', proxy(that._keydown, that));\n                listView.element.on(KEYDOWN + NS, proxy(that._keydownAction, that));\n                listView.bind('edit', function (ev) {\n                    var sender = ev.sender;\n                    ev.item.find('input').on('blur', function () {\n                        sender._closeEditable();\n                    });\n                });\n                Component.fn._bindEvents.call(this);\n            },\n            _select: function () {\n                var that = this, dataItems = that.getSelected();\n                that.trigger(SELECT, { entries: dataItems });\n            },\n            _keydown: function (ev) {\n                var that = this;\n                if (ev.keyCode === kendo.keys.ESC) {\n                    that.listView._closeEditable();\n                }\n            },\n            _keydownAction: function (ev) {\n                var that = this, target = $(ev.target).find('.k-state-focused');\n                that.trigger(KEYDOWNACTION, {\n                    target: target,\n                    keyCode: ev.keyCode\n                });\n            },\n            _mousedown: function (ev) {\n                var that = this, node = $(ev.target).closest('.k-item');\n                if (ev.which === 3 && !node.is('.k-state-selected')) {\n                    that.listView.selectable.clear();\n                    that.listView.select(node);\n                }\n            },\n            _dblClick: function (ev) {\n                var that = this, node = $(ev.target).closest('.k-item');\n                if (node.is('.k-edit-item')) {\n                    return;\n                }\n                var item = that.listView.dataItem(node);\n                if (item) {\n                    that.trigger(OPEN, { entry: item });\n                }\n            },\n            addFolder: function () {\n                this.listView.add();\n            },\n            edit: function (target) {\n                var that = this, selected = that.listView.select();\n                that.listView.edit(target || selected);\n            },\n            getSelected: function () {\n                var that = this, items = that.listView.select(), dataItems = [];\n                for (var i = 0; i < items.length; i++) {\n                    var item = that.listView.dataItem(items[i]);\n                    if (item) {\n                        dataItems.push(item);\n                    }\n                }\n                return dataItems;\n            },\n            destroy: function () {\n                this.listView.element.off(NS);\n                Component.fn.destroy.call(this);\n            }\n        });\n        ui.filemanager.registerViewComponent('list', ListView);\n        var TreeView = Component.extend({\n            init: function (element, options, explicitOptions) {\n                var that = this, messages = explicitOptions.messages;\n                options = extend({}, that.defaultOptions, options, { messages: messages });\n                Component.fn.init.call(this, ui.TreeView, element, options);\n                that.treeView = that.widgetComponent;\n                that._bindEvents();\n                if (explicitOptions.draggable !== false && !explicitOptions.isLocalBinding) {\n                    that._initDragAndDrop();\n                }\n            },\n            defaultOptions: {\n                dataTextField: 'name',\n                dropFilter: '.k-item'\n            },\n            _refreshDataSource: function (ev) {\n                var that = this, treeView = that.treeView, action = ev.action, node = ev.node, parentNode = null, items = ev.items.filter(function (item) {\n                        return item.isDirectory;\n                    }).map(function (item) {\n                        return extend({}, item.toJSON(), {\n                            id: item.id || kendo.guid(),\n                            hasChildren: item.hasChildren,\n                            items: []\n                        });\n                    });\n                if (node) {\n                    parentNode = treeView.findByUid(treeView.dataSource.get(node.id).uid);\n                    treeView._progress(parentNode, false);\n                }\n                if (!items.length) {\n                    return;\n                }\n                if (action == 'itemloaded' || parentNode && action === 'sync') {\n                    parentNode.find('.k-item').each(function (index, item) {\n                        treeView.remove(item);\n                    });\n                    treeView.append(items, parentNode);\n                } else if (action == 'remove') {\n                    this._remove(items[0].id);\n                } else if (action == 'itemchange') {\n                    var existingItem = treeView.dataSource.get(items[0].id);\n                    if (existingItem) {\n                        existingItem.set(ev.field, items[0][ev.field]);\n                    } else {\n                        treeView.append(items[0], parentNode);\n                    }\n                } else if (!treeView.dataSource.data().length) {\n                    treeView.append(items);\n                } else if (action === 'sync') {\n                    treeView.items().each(function (index, item) {\n                        treeView.remove(item);\n                    });\n                    treeView.append(items);\n                }\n            },\n            _remove: function (id) {\n                var that = this, treeView = that.treeView, dataSource = treeView.dataSource, item = dataSource.get(id), node;\n                if (item) {\n                    node = treeView.findByUid(item.uid);\n                    treeView.remove(node);\n                }\n            },\n            _bindEvents: function () {\n                var that = this;\n                that.treeView.bind(SELECT, proxy(that._navigate, that));\n                that.treeView.bind(EXPAND, proxy(that._expand, that));\n                that.treeView.element.bind(KEYDOWN, proxy(that._keydownAction, that));\n            },\n            _keydownAction: function (ev) {\n                var that = this, target = $(ev.target).find('.k-state-focused').closest('.k-item');\n                that.trigger(KEYDOWNACTION, {\n                    target: target,\n                    keyCode: ev.keyCode\n                });\n            },\n            _expand: function (ev) {\n                var that = this, treeView = that.treeView, entry = treeView.dataItem(ev.node);\n                ev.preventDefault();\n                that.trigger(LOAD, { entryId: entry.id });\n            },\n            _navigate: function (ev) {\n                var that = this, node = ev.node, entry = that.treeView.dataItem(node), path = entry.id;\n                ev.preventDefault();\n                that.trigger(NAVIGATE, {\n                    path: path,\n                    entry: entry.toJSON()\n                });\n            },\n            _hold: $.noop,\n            getSelected: function () {\n                var that = this, selectedItem = that.treeView.element.find('.k-state-selected').closest('.k-item'), item = that.treeView.dataItem(selectedItem);\n                return item;\n            },\n            refresh: function (id) {\n                var that = this, treeView = that.treeView, entry = treeView.dataSource.get(id), node = entry && treeView.findByUid(entry.uid);\n                if (entry && node) {\n                    treeView.element.find('.k-state-selected').removeClass('k-state-selected');\n                    node.find('> div .k-in').removeClass('k-state-hover').addClass('k-state-selected');\n                }\n            },\n            reload: function () {\n                this.treeView.dataSource.read();\n            }\n        });\n        ui.filemanager.registerViewComponent('tree', TreeView);\n        if (kendo.ui.Grid) {\n            var Grid = Component.extend({\n                init: function (element, options, explicitOptions) {\n                    var that = this, dataSourceOptions = explicitOptions.dataSource, messages = explicitOptions.messages;\n                    options = extend({}, that.defaultOptions, options, { messages: messages });\n                    that._setDSOptions(options, dataSourceOptions);\n                    that._setupColumns(options, messages);\n                    Component.fn.init.call(this, ui.Grid, element, options);\n                    that.grid = that.widgetComponent;\n                    that._bindEvents();\n                    if (explicitOptions.draggable !== false && !dataSourceOptions.isLocalBinding) {\n                        that._initDragAndDrop();\n                    }\n                },\n                defaultOptions: {\n                    selectable: kendo.support.mobileOS ? 'row' : 'multiple',\n                    editable: {\n                        mode: 'inline',\n                        confirmation: false\n                    },\n                    sortable: true,\n                    dropFilter: 'tr:not(.k-grid-edit-row)',\n                    navigatable: true\n                },\n                _setupColumns: function (options, messages) {\n                    if (!options.columns) {\n                        options.columns = [\n                            {\n                                field: 'name',\n                                title: messages.nameField || 'Name',\n                                template: function (item) {\n                                    var icon = kendo.getFileGroup(item.extension, true);\n                                    var template = '<div class=\\'file-group-icon\\'>' + '<span class=\\'k-icon k-i-' + icon + '\\'></span>' + '</div>' + '<div class=\\'file-name\\'>' + item.name + item.extension + '<div>';\n                                    return template;\n                                }\n                            },\n                            {\n                                field: 'created',\n                                title: messages.dateCreatedField,\n                                format: '{0:G}'\n                            },\n                            {\n                                field: 'size',\n                                title: messages.sizeField,\n                                template: function (item) {\n                                    if (item.size > 0) {\n                                        return kendo.getFileSizeMessage(item.size);\n                                    } else {\n                                        return '';\n                                    }\n                                }\n                            }\n                        ];\n                    }\n                },\n                _bindEvents: function () {\n                    var that = this, grid = that.grid;\n                    grid.bind(CHANGE, proxy(that._select, that));\n                    grid.table.on('dblclick' + NS, proxy(that._dblClick, that));\n                    grid.table.on('mousedown' + NS, 'tr:not(.k-grid-edit-row)', proxy(that._mousedown, that));\n                    grid.table.on(KEYDOWN + NS, '.k-grid-edit-row', proxy(that._keydown, that));\n                    grid.table.on(KEYDOWN + NS, proxy(that._keydownAction, that));\n                    grid.bind('edit', function () {\n                        that._toggleFocusable(true);\n                    });\n                    grid.saveRow = $.noop;\n                    Component.fn._bindEvents.call(this);\n                },\n                _keydownAction: function (ev) {\n                    var that = this, target = $(ev.target).find('.k-state-focused').closest('tr');\n                    that.trigger(KEYDOWNACTION, {\n                        target: target,\n                        keyCode: ev.keyCode\n                    });\n                },\n                _keydown: function (ev) {\n                    var that = this, grid = that.grid;\n                    if (!$(ev.target).closest('.k-grid-edit-row').length) {\n                        return;\n                    }\n                    if (ev.keyCode === kendo.keys.ENTER) {\n                        setTimeout(function () {\n                            that._closeEditable();\n                        });\n                        that._tryCancel();\n                    }\n                    if (ev.keyCode === kendo.keys.ESC) {\n                        grid.cancelChanges();\n                    }\n                },\n                _mousedown: function (ev) {\n                    var that = this, node = $(ev.target).closest('tr[data-uid]');\n                    if (ev.which === 1 && that.grid.editable) {\n                        setTimeout(function () {\n                            that._closeEditable();\n                        });\n                        that._tryCancel();\n                    }\n                    if (ev.which === 3 && !node.is('.k-state-selected')) {\n                        that.grid.selectable.clear();\n                        that.grid.select(node);\n                    }\n                },\n                _tryCancel: function () {\n                    var that = this, grid = that.grid, container;\n                    if (grid.editable) {\n                        container = grid._editContainer;\n                        if (!container.find('input').val()) {\n                            grid.cancelChanges();\n                        }\n                    }\n                    setTimeout(function () {\n                        that._toggleFocusable(false);\n                    });\n                },\n                _toggleFocusable: function (state) {\n                    var that = this, grid = that.grid;\n                    grid.table.find('tr,td').children().addBack().toggleClass('k-focusable', state);\n                },\n                _closeEditable: function () {\n                    var that = this, container;\n                    if (that.grid.editable && !that.grid.editable.options.model.dirty) {\n                        container = that.grid._editContainer;\n                        that.grid._destroyEditable();\n                        that.grid._displayRow(container);\n                    }\n                },\n                _select: function () {\n                    var that = this, dataItems = that.getSelected();\n                    that.trigger(SELECT, { entries: dataItems });\n                },\n                _dblClick: function (ev) {\n                    var that = this, node = $(ev.target).closest('tr[data-uid]');\n                    if (node.is('.k-grid-edit-row')) {\n                        return;\n                    }\n                    var item = that.grid.dataItem(node);\n                    if (item) {\n                        that.trigger(OPEN, { entry: item });\n                    }\n                },\n                getSelected: function () {\n                    var that = this, items = that.grid.select(), dataItems = [];\n                    for (var i = 0; i < items.length; i++) {\n                        dataItems.push(that.grid.dataItem(items[i]));\n                    }\n                    return dataItems;\n                },\n                addFolder: function () {\n                    this.grid.addRow();\n                },\n                edit: function (target) {\n                    var that = this, selected = that.grid.select();\n                    that.grid.editRow(target || selected);\n                },\n                destroy: function () {\n                    this.grid.table.off(NS);\n                    this.grid.element.off(NS);\n                    Component.fn.destroy.call(this);\n                }\n            });\n            ui.filemanager.registerViewComponent('grid', Grid);\n        }\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('filemanager/toolbar', [\n        'kendo.toolbar',\n        'kendo.switch'\n    ], f);\n}(function () {\n    (function ($, undefined) {\n        var kendo = window.kendo, extend = $.extend, proxy = $.proxy, ToolBar = kendo.ui.ToolBar, Item = kendo.toolbar.Item, CLICK = 'click', TOGGLE = 'toggle', CLOSE = 'close', ACTION = 'action', CHANGE = 'change', NS = '.fileManagerToolbar';\n        var FileManagerToolBar = ToolBar.extend({\n            init: function (element, options) {\n                var that = this;\n                that._extendOptions(options);\n                ToolBar.fn.init.call(that, element, options);\n                that._attachEvents();\n            },\n            events: [ACTION],\n            defaultTools: {\n                createFolder: {\n                    type: 'button',\n                    text: 'New Folder',\n                    name: 'createFolder',\n                    command: 'CreateFolderCommand',\n                    rules: '{ \"remote\": true }'\n                },\n                upload: {\n                    type: 'button',\n                    text: 'Upload',\n                    name: 'upload',\n                    command: 'OpenDialogCommand',\n                    options: '{ \"type\": \"uploadDialog\" }',\n                    rules: '{ \"remote\": true }'\n                },\n                sortDirection: {\n                    type: 'buttonGroup',\n                    text: 'Sort Direction',\n                    name: 'sortDirection',\n                    buttons: [\n                        {\n                            name: 'sortDirectionAsc',\n                            icon: 'sort-asc-sm',\n                            togglable: true,\n                            group: 'sortDirection',\n                            command: 'SortCommand',\n                            options: '{ \"dir\": \"asc\" }',\n                            selected: true\n                        },\n                        {\n                            name: 'sortDirectionDesc',\n                            icon: 'sort-desc-sm',\n                            togglable: true,\n                            group: 'sortDirection',\n                            command: 'SortCommand',\n                            options: '{ \"dir\": \"desc\" }'\n                        }\n                    ]\n                },\n                sortField: {\n                    type: 'splitButton',\n                    text: 'Sort By',\n                    name: 'sortField',\n                    command: 'SortCommand',\n                    menuButtons: [\n                        {\n                            name: 'nameField',\n                            text: 'Name',\n                            options: '{\"field\": \"name\"}',\n                            command: 'SortCommand'\n                        },\n                        {\n                            name: 'typeField',\n                            text: 'Type',\n                            options: '{\"field\": \"extension\"}',\n                            command: 'SortCommand'\n                        },\n                        {\n                            name: 'sizeField',\n                            text: 'Size',\n                            options: '{\"field\": \"size\"}',\n                            command: 'SortCommand'\n                        },\n                        {\n                            name: 'dateCreatedField',\n                            text: 'Date created',\n                            options: '{\"field\": \"createdUtc\"}',\n                            command: 'SortCommand'\n                        },\n                        {\n                            name: 'dateModifiedField',\n                            text: 'Date modified',\n                            options: '{\"field\": \"modifiedUtc\"}',\n                            command: 'SortCommand'\n                        }\n                    ]\n                },\n                changeView: {\n                    type: 'buttonGroup',\n                    text: 'Change View',\n                    name: 'changeView',\n                    buttons: [\n                        {\n                            name: 'listView',\n                            icon: 'grid-layout',\n                            togglable: true,\n                            group: 'changeView',\n                            command: 'ChangeViewCommand',\n                            options: 'list'\n                        },\n                        {\n                            name: 'gridView',\n                            icon: 'grid',\n                            togglable: true,\n                            group: 'changeView',\n                            command: 'ChangeViewCommand',\n                            options: 'grid'\n                        }\n                    ]\n                },\n                spacer: { type: 'spacer' },\n                details: {\n                    type: 'fileManagerDetailsToggle',\n                    text: 'View Details',\n                    name: 'details',\n                    overflow: 'never',\n                    command: 'TogglePaneCommand',\n                    options: '{ \"type\": \"preview\" }'\n                },\n                search: {\n                    type: 'fileManagerSearch',\n                    text: 'Search',\n                    name: 'search',\n                    command: 'SearchCommand',\n                    icon: 'search',\n                    overflow: 'never',\n                    options: '{ \"field\": \"name\", \"operator\": \"startswith\" }'\n                }\n            },\n            _attachEvents: function () {\n                var that = this;\n                that.bind(TOGGLE, proxy(that._click, that));\n                that.bind(CLOSE, proxy(that._click, that));\n                that.bind(CLICK, proxy(that._click, that));\n                that.bind(CHANGE, proxy(that._change, that));\n            },\n            _extendOptions: function (options) {\n                var that = this, tools = options.items ? options.items : Object.keys(that.defaultTools);\n                that.options = options;\n                that.options.items = that._extendToolsOptions(tools);\n            },\n            _extendToolsOptions: function (tools) {\n                var that = this, messages = that.options.messages;\n                if (!tools.length) {\n                    return;\n                }\n                return tools.map(function (tool) {\n                    var isBuiltInTool = $.isPlainObject(tool) && Object.keys(tool).length === 1 && tool.name, toolOptions, toolRules;\n                    tool = isBuiltInTool ? tool.name : tool;\n                    toolOptions = $.isPlainObject(tool) ? tool : extend({}, that.defaultTools[tool]);\n                    toolRules = toolOptions.rules ? JSON.parse(toolOptions.rules) : {};\n                    kendo.deepExtend(toolOptions, {\n                        id: toolOptions.name + '-' + kendo.guid(),\n                        name: toolOptions.name,\n                        text: messages[toolOptions.name],\n                        attributes: {\n                            'aria-label': messages[toolOptions.name],\n                            'title': messages[toolOptions.name],\n                            'data-command': toolOptions.command,\n                            'data-options': toolOptions.options\n                        },\n                        overflow: toolOptions.overflow\n                    });\n                    if (toolOptions.type === 'buttonGroup') {\n                        toolOptions.buttons = toolOptions.buttons.map(proxy(that._mapButtonGroups, that));\n                    }\n                    if (toolOptions.type === 'splitButton') {\n                        toolOptions.menuButtons = toolOptions.menuButtons.map(proxy(that._mapMenuButtons, that));\n                    }\n                    if (toolRules.remote && that.options.filemanager.dataSource.isLocalBinding) {\n                        toolOptions.hidden = true;\n                    }\n                    return toolOptions;\n                }, that);\n            },\n            _mapButtonGroups: function (button) {\n                var that = this, messages = that.options.messages;\n                if (button.group === 'changeView' && button.options === that.options.filemanager.options.initialView) {\n                    button.selected = true;\n                }\n                return kendo.deepExtend(button, {\n                    attributes: extend({}, button.attributes, {\n                        'aria-label': messages[button.name],\n                        'title': messages[button.name],\n                        'data-command': button.command,\n                        'data-options': button.options\n                    })\n                });\n            },\n            _mapMenuButtons: function (button) {\n                var that = this, messages = that.options.messages;\n                return kendo.deepExtend(button, {\n                    text: messages[button.name],\n                    attributes: extend({}, button.attributes, {\n                        'aria-label': messages[button.name],\n                        'title': messages[button.name],\n                        'data-command': button.command,\n                        'data-options': button.options\n                    })\n                });\n            },\n            _click: function (ev) {\n                var command = $(ev.target).data('command'), options = $(ev.target).data('options');\n                if (!command) {\n                    return;\n                }\n                this.action({\n                    command: command,\n                    options: options\n                });\n            },\n            _change: function (ev) {\n                var command = $(ev.target).data('command'), options = $(ev.target).data('options');\n                options = extend({}, options, { value: $(ev.target).val() });\n                if (!command) {\n                    return;\n                }\n                this.action({\n                    command: command,\n                    options: options\n                });\n            },\n            isToolEnabled: function (toolName) {\n                var that = this, options = that.options, found = false;\n                for (var i = 0; i < options.items.length; i++) {\n                    if (options.items[i].name == toolName) {\n                        found = true;\n                        break;\n                    }\n                }\n                return options.items[toolName] || found;\n            },\n            action: function (args) {\n                this.trigger(ACTION, args);\n            },\n            destroy: function () {\n                if (this.fileManagerSearch) {\n                    this.fileManagerSearch.destroy();\n                }\n                ToolBar.fn.destroy.call(this);\n            }\n        });\n        var SearchTool = Item.extend({\n            init: function (options, toolbar) {\n                var that = this, element = $('<div class=\\'k-filemanager-search-tool k-textbox\\'></div>'), input = $('<input class=\\'k-input\\' autocomplete=\\'off\\' />'), iconWrapper = $('<span class=\\'k-input-icon\\'></span>'), icon = $('<span />');\n                that.element = element;\n                that.input = input;\n                that.iconWrapper = iconWrapper;\n                that.icon = icon;\n                that.options = options;\n                that.options.type = 'fileManagerSearch';\n                that.toolbar = toolbar;\n                that.attributes();\n                that.renderIcon();\n                that.addUidAttr();\n                that.addIdAttr();\n                that.addOverflowAttr();\n                that.input.attr({\n                    placeholder: that.options.text,\n                    title: that.options.text\n                });\n                that.iconWrapper.append(icon);\n                that.element.append(that.input).append(iconWrapper);\n                that._bindEvents();\n                that.toolbar.fileManagerSearch = that;\n            },\n            attributes: function () {\n                if (this.options.attributes) {\n                    this.input.attr(this.options.attributes);\n                }\n            },\n            renderIcon: function () {\n                if (this.options.icon) {\n                    this.icon.addClass('k-icon k-i-' + this.options.icon);\n                }\n            },\n            _bindEvents: function () {\n                this._inputHandler = proxy(this._input, this);\n                this.input.on('input' + NS, this._inputHandler);\n            },\n            _input: function (ev) {\n                this.toolbar.trigger(CHANGE, { target: ev.target });\n            },\n            destroy: function () {\n                this.element.off(NS);\n            }\n        });\n        kendo.toolbar.registerComponent('fileManagerSearch', SearchTool);\n        var FileManagerDetailsToggle = Item.extend({\n            init: function (options, toolbar) {\n                var that = this, element = $('<div class=\\'k-filemanager-details-toggle\\'></div>'), label = $('<label>' + options.text + '</label>'), switchElement = $('<input title=\\'' + options.text + '\\' />');\n                that.element = element;\n                that.input = switchElement;\n                that.label = label;\n                that.options = options;\n                that.toolbar = toolbar;\n                that.attributes();\n                that.addUidAttr();\n                that.addIdAttr();\n                that.addOverflowAttr();\n                that.element.append(that.label);\n                that.element.append(that.input);\n                that.switchInstance = new kendo.ui.Switch(that.input, {\n                    change: proxy(that._change, that),\n                    messages: {\n                        checked: toolbar.options.messages.detailsChecked,\n                        unchecked: toolbar.options.messages.detailsUnchecked\n                    }\n                });\n                that.label.on(CLICK + NS, proxy(that._click, that));\n                that.toolbar.fileManagerDetailsToggle = that;\n            },\n            _change: function (ev) {\n                this.toolbar.trigger(CHANGE, { target: ev.sender.wrapper.parent() });\n            },\n            _click: function (ev) {\n                this.switchInstance.toggle();\n                this.toolbar.trigger(CHANGE, { target: $(ev.target).parent() });\n            },\n            destroy: function () {\n                this.element.off(NS);\n            }\n        });\n        kendo.toolbar.registerComponent('fileManagerDetailsToggle', FileManagerDetailsToggle);\n        extend(kendo.ui.filemanager, { ToolBar: FileManagerToolBar });\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('filemanager/data', ['kendo.data'], f);\n}(function () {\n    (function ($, undefined) {\n        var kendo = window.kendo, extend = $.extend, data = kendo.data, Node = data.Node, HierarchicalDataSource = data.HierarchicalDataSource, DataSource = data.DataSource;\n        extend(true, kendo.data, {\n            schemas: {\n                'filemanager': {\n                    data: function (data) {\n                        return data.items || data || [];\n                    },\n                    model: {\n                        id: 'path',\n                        hasChildren: 'hasDirectories',\n                        fields: {\n                            name: {\n                                editable: true,\n                                type: 'String',\n                                defaultValue: 'New Folder'\n                            },\n                            size: {\n                                editable: false,\n                                type: 'Number'\n                            },\n                            path: {\n                                editable: false,\n                                type: 'String'\n                            },\n                            extension: {\n                                editable: false,\n                                type: 'String'\n                            },\n                            isDirectory: {\n                                editable: false,\n                                defaultValue: true,\n                                type: 'Boolean'\n                            },\n                            hasDirectories: {\n                                editable: false,\n                                defaultValue: false,\n                                type: 'Boolean'\n                            },\n                            created: {\n                                type: 'Date',\n                                editable: false\n                            },\n                            createdUtc: {\n                                type: 'Date',\n                                editable: false\n                            },\n                            modified: {\n                                type: 'Date',\n                                editable: false\n                            },\n                            modifiedUtc: {\n                                type: 'Date',\n                                editable: false\n                            }\n                        }\n                    }\n                }\n            }\n        });\n        var FileEntry = Node.define({\n            init: function (value) {\n                var that = this, isDirectory = this.isDirectory;\n                Node.fn.init.call(this, value);\n                if (typeof isDirectory === 'string') {\n                    isDirectory = kendo.getter(isDirectory);\n                }\n                if (kendo.isFunction(isDirectory)) {\n                    var isDirectoryObject = isDirectory.call(that, that);\n                    if (isDirectoryObject && isDirectoryObject.length === 0) {\n                        that.isDirectory = false;\n                    } else {\n                        that.isDirectory = !!isDirectoryObject;\n                    }\n                }\n                if (that.isDirectory) {\n                    that._initChildren();\n                }\n            },\n            _initChildren: function () {\n                var that = this;\n                var children, transport, parameterMap;\n                if (!(that.children instanceof kendo.data.FileManagerDataSource)) {\n                    children = that.children = new kendo.data.FileManagerDataSource(that._childrenOptions);\n                    transport = children.transport;\n                    parameterMap = transport.parameterMap;\n                    transport.parameterMap = function (data, type) {\n                        if (type === 'read' || type === 'create') {\n                            data.target = that.id;\n                        }\n                        if (parameterMap) {\n                            data = parameterMap(data, type);\n                        }\n                        return data;\n                    };\n                    children.parent = function () {\n                        return that;\n                    };\n                    children.bind('change', function (e) {\n                        e.node = e.node || that;\n                        that.trigger('change', e);\n                    });\n                    children.bind('error', function (e) {\n                        var collection = that.parent();\n                        if (collection) {\n                            e.node = e.node || that;\n                            collection.trigger('error', e);\n                        }\n                    });\n                    that._updateChildrenField();\n                }\n            },\n            isNew: function () {\n                if (this.fileManagerNewItem) {\n                    delete this.fileManagerNewItem;\n                    return true;\n                }\n                return this.id === this._defaultId;\n            }\n        });\n        var FileManagerDataSource = HierarchicalDataSource.extend({\n            init: function (options) {\n                var fileEntry = FileEntry.define({ children: options });\n                if (options.filter && !options.serverFiltering) {\n                    this._hierarchicalFilter = options.filter;\n                    options.filter = null;\n                }\n                DataSource.fn.init.call(this, $.extend(true, {}, {\n                    schema: {\n                        modelBase: fileEntry,\n                        model: fileEntry\n                    }\n                }, options));\n                this.isLocalBinding = this.transport instanceof kendo.data.LocalTransport;\n                this._attachBubbleHandlers();\n            },\n            insert: function (index, model) {\n                var parentNode = this.parent();\n                if (parentNode && parentNode._initChildren) {\n                    if (model && model.isDirectory) {\n                        parentNode.hasDirectories = true;\n                    }\n                    parentNode.hasChildren = true;\n                    parentNode._initChildren();\n                }\n                return DataSource.fn.insert.call(this, index, model);\n            },\n            remove: function (node) {\n                var parentNode = node.parentNode(), dataSource = this, result;\n                if (parentNode && parentNode._initChildren) {\n                    dataSource = parentNode.children;\n                }\n                result = DataSource.fn.remove.call(dataSource, node);\n                if (parentNode && (dataSource.data() && !dataSource.data().length)) {\n                    parentNode.hasChildren = false;\n                } else if (parentNode && !this._hasDirectories(parentNode)) {\n                    parentNode.hasDirectories = false;\n                }\n                return result;\n            },\n            _hasDirectories: function (node) {\n                var result;\n                if (!node.children.data()) {\n                    return false;\n                }\n                result = node.children.data().filter(function (item) {\n                    return item.isDirectory;\n                });\n                return !!result.length;\n            }\n        });\n        FileManagerDataSource.create = function (options) {\n            options = options && options.push ? { data: options } : options;\n            var dataSource = options || {}, data = dataSource.data;\n            if (data && data._dataSource) {\n                return data._dataSource;\n            }\n            dataSource.data = data;\n            return dataSource instanceof FileManagerDataSource ? dataSource : new FileManagerDataSource(dataSource);\n        };\n        extend(kendo.data, {\n            FileManagerDataSource: FileManagerDataSource,\n            FileEntry: FileEntry\n        });\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('filemanager/contextmenu', ['kendo.menu'], f);\n}(function () {\n    (function ($, undefined) {\n        var kendo = window.kendo, extend = $.extend, proxy = $.proxy, template = kendo.template, ContextMenu = kendo.ui.ContextMenu, ACTION = 'action';\n        var FileManagerContextMenu = ContextMenu.extend({\n            init: function (element, options) {\n                var that = this;\n                ContextMenu.fn.init.call(that, element, options);\n                that._overrideTemplates();\n                that._extendItems();\n                that.bind('select', proxy(that._onSelect, that));\n            },\n            _overrideTemplates: function () {\n                this.templates.sprite = template('#if(spriteCssClass) {#<span class=\\'#= spriteCssClass #\\'></span>#}#');\n            },\n            defaultItems: {\n                'rename': {\n                    text: 'Rename',\n                    spriteCssClass: 'k-icon k-i-edit',\n                    command: 'RenameCommand'\n                },\n                'delete': {\n                    text: 'Delete',\n                    spriteCssClass: 'k-icon k-i-delete',\n                    command: 'DeleteCommand'\n                }\n            },\n            events: [ACTION],\n            _extendItems: function () {\n                var that = this, items = that.options.items, item, isBuiltInTool;\n                if (items && items.length) {\n                    for (var i = 0; i < items.length; i++) {\n                        item = items[i];\n                        isBuiltInTool = $.isPlainObject(item) && Object.keys(item).length === 1 && item.name;\n                        if (isBuiltInTool) {\n                            item = item.name;\n                        }\n                        if ($.isPlainObject(item)) {\n                            that._extendItem(item);\n                            that.append(item);\n                        } else if (that.defaultItems[item]) {\n                            item = that.defaultItems[item];\n                            that._extendItem(item);\n                            that.append(item);\n                        }\n                    }\n                } else {\n                    for (var key in that.defaultItems) {\n                        item = that.defaultItems[key];\n                        that._extendItem(item);\n                        that.append(item);\n                    }\n                }\n            },\n            _extendItem: function (item) {\n                var that = this, messages = that.options.messages;\n                extend(item, {\n                    text: messages[item.text],\n                    spriteCssClass: item.spriteCssClass || '',\n                    attr: { 'data-command': item.command }\n                });\n            },\n            _onSelect: function (ev) {\n                var command = $(ev.item).data('command');\n                var target = $(ev.target);\n                if (!command) {\n                    return;\n                }\n                this.action({\n                    command: command,\n                    options: { target: target }\n                });\n            },\n            action: function (args) {\n                this.trigger(ACTION, args);\n            }\n        });\n        extend(kendo.ui.filemanager, { ContextMenu: FileManagerContextMenu });\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('kendo.filemanager', [\n        'filemanager/commands',\n        'filemanager/view',\n        'filemanager/toolbar',\n        'filemanager/data',\n        'filemanager/contextmenu',\n        'kendo.breadcrumb',\n        'kendo.upload',\n        'kendo.dialog',\n        'kendo.resizable'\n    ], f);\n}(function () {\n    var __meta__ = {\n        id: 'filemanager',\n        name: 'FileManager',\n        category: 'web',\n        description: 'The FileManager widget displays offers file management functionality.',\n        depends: [\n            'core',\n            'data',\n            'listview',\n            'toolbar',\n            'breadcrumb',\n            'menu',\n            'treeview',\n            'upload',\n            'dialog',\n            'switch',\n            'resizable'\n        ],\n        features: [{\n                id: 'filemanager-grid-view',\n                name: 'GridView',\n                description: 'Support for GridView',\n                depends: ['grid']\n            }]\n    };\n    (function ($, undefined) {\n        var ui = kendo.ui, extend = $.extend, isPlainObject = $.isPlainObject, isArray = $.isArray, DataBoundWidget = ui.DataBoundWidget, proxy = $.proxy, template = kendo.template, outerHeight = kendo._outerHeight, NAVIGATE = 'navigate', SELECT = 'select', OPEN = 'open', ERROR = 'error', CHANGE = 'change', UPLOAD = 'upload', SUCCESS = 'success', CLOSE = 'close', LOAD = 'load', DATABINDING = 'dataBinding', DATABOUND = 'dataBound', DROP = 'drop', EXECUTE = 'execute', KEYDOWNACTION = 'keydownAction', TREE_TYPE = 'tree', DOT = '.';\n        var fileManagerStyles = {\n            wrapper: 'k-widget k-filemanager',\n            header: 'k-filemanager-header',\n            navigation: 'k-filemanager-navigation',\n            navigationContainer: 'k-filemanager-navigation-container',\n            contentContainer: 'k-filemanager-content-container',\n            content: 'k-filemanager-content',\n            preview: 'k-filemanager-preview',\n            previewContainer: 'k-filemanager-preview-container',\n            toolbar: 'k-filemanager-toolbar',\n            treeview: 'k-filemanager-treeview',\n            breadcrumb: 'k-filemanager-breadcrumb',\n            grid: 'k-filemanager-grid',\n            list: 'k-filemanager-listview',\n            view: 'k-filemanager-view',\n            upload: 'k-filemanager-upload',\n            uploadDialog: 'k-filemanager-upload-dialog',\n            splitBar: 'k-splitbar',\n            splitBarHorizontal: 'k-splitbar-horizontal k-splitbar-draggable-horizontal',\n            splitBarHover: 'k-splitbar-horizontal-hover',\n            splitBarIcon: 'k-icon k-resize-handle',\n            splitBarNavigation: 'k-filemanager-splitbar-navigation',\n            splitBarPreview: 'k-filemanager-splitbar-preview',\n            resizable: 'k-filemanager-resizable'\n        };\n        var fileManagerTemplateStyles = {\n            fileInfo: 'k-file-info',\n            filePreviewWrapper: 'k-file-preview-wrapper',\n            fileTitleWrapper: 'k-file-title-wrapper',\n            fileTitle: 'k-file-title',\n            fileMetaWrapper: 'k-file-meta-wrapper',\n            metaLabel: 'k-file-meta-label',\n            metaValue: 'k-file-meta-value',\n            extension: 'k-file-type',\n            size: 'k-file-size',\n            created: 'k-file-created',\n            modified: 'k-file-modified'\n        };\n        var NO_FILE_PREVIEW_TEMPLATE = '<p>#= messages.noFileSelected #</p>';\n        var SINGLE_FILES_PREVIEW_TEMPLATE = '<div class=\"#=styles.fileInfo#\">' + '<div class=\"#=styles.filePreviewWrapper#\">' + '<span class=\"k-icon k-i-#=kendo.getFileGroup(selection[0].extension, true)#\"></span>' + '</div>' + '<div class=\"#=styles.fileTitleWrapper#\">' + '<span class=\"#=styles.fileTitle#\">#=selection[0].name#</span>' + '</div>' + '#if(metaFields){#' + '<dl class=\"#=styles.fileMetaWrapper#\">' + '#for(var i = 0; i < metaFields.length; i+=1){#' + '#var field = metaFields[i]#' + '<dt class=\"#=styles.metaLabel#\">#=messages[field]#: </dt>' + '<dd class=\"#=styles.metaValue# #=styles[field]#\">' + '#if(field == \"size\"){#' + ' #=kendo.getFileSizeMessage(selection[0][field])#' + '#} else if(selection[0][field] instanceof Date) {#' + ' #=kendo.toString(selection[0][field], \"G\")#' + '#} else if(field == \"extension\") {#' + ' #=kendo.getFileGroup(selection[0].extension)#' + '#} else {#' + ' #=selection[0][field]#' + '#}#' + '</dd>' + '<dd class=\"line-break\"></dd>' + '# } #' + '</dl>' + '#}#' + '</div>';\n        var MULTIPLE_FILES_PREVIEW_TEMPLATE = '<div class=\"#=styles.fileInfo#\">' + '<div class=\"#=styles.filePreviewWrapper#\">' + '<span class=\"k-icon k-i-file\"></span>' + '</div>' + '<div class=\"#=styles.fileTitleWrapper#\">' + '<span class=\"#=styles.fileTitle#\">' + '#=selection.length# ' + '#=messages.items#' + '</span>' + '</div>' + '</div>';\n        var FileManager = DataBoundWidget.extend({\n            init: function (element, options) {\n                var that = this;\n                DataBoundWidget.fn.init.call(that, element, options);\n                that.options = kendo.deepExtend({}, that.options, options);\n                that._hasUpload = (that.options.uploadUrl || that.options.upload.async && that.options.upload.async.saveUrl) && that.options.upload !== false;\n                that.defaultSortOption = {\n                    field: 'name',\n                    dir: 'asc'\n                };\n                that.folderSortOption = {\n                    field: 'isDirectory',\n                    dir: 'desc'\n                };\n                that._dataSource();\n                that._wrapper();\n                that._renderHeader();\n                that._renderContentContainer();\n                that._initContextMenu();\n                that._renderNavigation();\n                that._renderContent();\n                that._renderPreview();\n                if (that._hasUpload) {\n                    that._initUploadDialog();\n                }\n                that._resizable();\n                that.resize();\n                kendo.notify(that, kendo.ui);\n            },\n            options: {\n                name: 'FileManager',\n                height: 500,\n                resizable: true,\n                initialView: 'list',\n                toolbar: { resizable: true },\n                contextMenu: {},\n                upload: {},\n                uploadUrl: '',\n                views: {},\n                breadcrumb: {},\n                draggable: true,\n                dialogs: {\n                    upload: { width: 530 },\n                    moveConfirm: {\n                        width: 350,\n                        closable: true\n                    },\n                    deleteConfirm: {\n                        width: 360,\n                        closable: true\n                    },\n                    renamePrompt: {\n                        width: 350,\n                        closable: true\n                    }\n                },\n                previewPane: {\n                    metaFields: [\n                        'extension',\n                        'size',\n                        'created',\n                        'modified'\n                    ],\n                    noFileTemplate: NO_FILE_PREVIEW_TEMPLATE,\n                    singleFileTemplate: SINGLE_FILES_PREVIEW_TEMPLATE,\n                    multipleFilesTemplate: MULTIPLE_FILES_PREVIEW_TEMPLATE\n                },\n                messages: {\n                    toolbar: {\n                        createFolder: 'New Folder',\n                        upload: 'Upload',\n                        sortDirection: 'Sort Direction',\n                        sortDirectionAsc: 'Sort Direction Ascending',\n                        sortDirectionDesc: 'Sort Direction Descending',\n                        sortField: 'Sort By',\n                        nameField: 'Name',\n                        sizeField: 'File Size',\n                        typeField: 'Type',\n                        dateModifiedField: 'Date Modified',\n                        dateCreatedField: 'Date Created',\n                        listView: 'List View',\n                        gridView: 'Grid View',\n                        search: 'Search',\n                        details: 'View Details',\n                        detailsChecked: 'On',\n                        detailsUnchecked: 'Off',\n                        'delete': 'Delete',\n                        rename: 'Rename'\n                    },\n                    views: {\n                        nameField: 'Name',\n                        sizeField: 'File Size',\n                        typeField: 'Type',\n                        dateModifiedField: 'Date Modified',\n                        dateCreatedField: 'Date Created',\n                        items: 'items'\n                    },\n                    dialogs: {\n                        upload: {\n                            title: 'Upload Files',\n                            clear: 'Clear List',\n                            done: 'Done'\n                        },\n                        moveConfirm: {\n                            title: 'Confirm',\n                            content: '<p style=\\'text-align: center;\\'>Do you want to move or copy?</p>',\n                            okText: 'Copy',\n                            cancel: 'Move',\n                            close: 'close'\n                        },\n                        deleteConfirm: {\n                            title: 'Confirm',\n                            content: '<p style=\\'text-align: center;\\'>Are you sure you want to delete the selected file(s)?</br>You cannot undo this action.</p>',\n                            okText: 'Delete',\n                            cancel: 'Cancel',\n                            close: 'close'\n                        },\n                        renamePrompt: {\n                            title: 'Prompt',\n                            content: '<p style=\\'text-align: center;\\'>Enter new name for the file.</p>',\n                            okText: 'Rename',\n                            cancel: 'Cancel',\n                            close: 'close'\n                        }\n                    },\n                    previewPane: {\n                        noFileSelected: 'No File Selected',\n                        extension: 'Type',\n                        size: 'Size',\n                        created: 'Date Created',\n                        createdUtc: 'Date Created UTC',\n                        modified: 'Date Modified',\n                        modifiedUtc: 'Date Modified UTC',\n                        items: 'items'\n                    }\n                }\n            },\n            events: [\n                NAVIGATE,\n                SELECT,\n                OPEN,\n                DATABINDING,\n                DATABOUND,\n                ERROR,\n                DROP,\n                EXECUTE\n            ],\n            _dataSource: function () {\n                var that = this, options = that.options, dataSourceOptions = options.dataSource || {}, typeSortOrder = that.folderSortOption, nameSortOrder = that.defaultSortOption, dataSource;\n                if (!(dataSourceOptions instanceof kendo.data.FileManagerDataSource)) {\n                    if (isArray(dataSourceOptions)) {\n                        dataSource = {\n                            data: dataSourceOptions,\n                            autoSync: false,\n                            sort: [\n                                typeSortOrder,\n                                nameSortOrder\n                            ]\n                        };\n                    } else {\n                        dataSource = extend(true, dataSourceOptions, {\n                            autoSync: false,\n                            sort: [\n                                typeSortOrder,\n                                nameSortOrder\n                            ]\n                        });\n                    }\n                    if (dataSourceOptions && isPlainObject(dataSourceOptions.schema)) {\n                        dataSource.schema = dataSourceOptions.schema;\n                    } else if (isPlainObject(kendo.data.schemas.filemanager)) {\n                        dataSource.schema = kendo.data.schemas.filemanager;\n                    }\n                } else {\n                    dataSource = dataSourceOptions;\n                }\n                if (that.dataSource && that._errorHandler) {\n                    that.dataSource.unbind(ERROR, that._errorHandler);\n                    that.dataSource.unbind(CHANGE, that._changeHandler);\n                } else {\n                    that._errorHandler = proxy(that._error, that);\n                    that._changeHandler = proxy(that._change, that);\n                }\n                that.dataSource = kendo.data.FileManagerDataSource.create(dataSource).bind(ERROR, that._errorHandler).bind(CHANGE, that._changeHandler);\n            },\n            _error: function (ev) {\n                if (!this.trigger(ERROR, ev)) {\n                    throw new Error('Error! The requested URL returned ' + ev.xhr.status + ' - ' + ev.xhr.statusText);\n                }\n            },\n            _wrapper: function () {\n                var that = this, options = that.options, width = options.width, height = options.height;\n                that.wrapper = that.element.addClass(fileManagerStyles.wrapper);\n                if (width) {\n                    that.wrapper.width(width);\n                }\n                if (height) {\n                    that.wrapper.height(height);\n                }\n                that._resizeHandler = kendo.onResize(function () {\n                    that.resize(true);\n                });\n            },\n            _renderHeader: function () {\n                var that = this, options = that.options;\n                if (options.toolbar) {\n                    that.header = $('<div />').addClass(fileManagerStyles.header);\n                    that.header.append(that._initToolbar().element);\n                }\n                that.wrapper.append(that.header);\n            },\n            _renderContentContainer: function () {\n                var that = this, container = $('<div />').addClass(fileManagerStyles.contentContainer);\n                that.contentContainer = container;\n                that.wrapper.append(that.contentContainer);\n            },\n            _initContextMenu: function () {\n                var that = this, options = that.options, menuOptions = extend({}, options.contextMenu, {\n                        filemanager: that,\n                        messages: options.messages.toolbar,\n                        target: that.contentContainer,\n                        filter: '[data-uid]',\n                        action: that.executeCommand.bind(that)\n                    });\n                if (that.options.contextMenu === false || that.dataSource.isLocalBinding) {\n                    return;\n                }\n                that.contextMenu = new ui.filemanager.ContextMenu('<ul></ul>', menuOptions);\n            },\n            _renderNavigation: function () {\n                var that = this;\n                that.navigation = $('<div />').addClass(fileManagerStyles.navigation);\n                that.navigationContainer = $('<div />').addClass(fileManagerStyles.navigationContainer);\n                that.navigation.append(that.navigationContainer);\n                that.navigationContainer.append(that._initTreeView().element);\n                that.contentContainer.append(that.navigation);\n            },\n            _renderContent: function () {\n                var that = this, options = that.options, toolbar = that.toolbar;\n                that.content = $('<div />').addClass(fileManagerStyles.content);\n                if (options.breadcrumb) {\n                    that.content.append(that._initBreadcrumb().element);\n                }\n                if (!toolbar || !toolbar.isToolEnabled(toolbar.defaultTools.upload.name)) {\n                    that.content.append(that._initUpload().wrapper);\n                }\n                that.content.append(that._initView());\n                that.contentContainer.append(that.content);\n            },\n            _renderPreview: function () {\n                var that = this, enablePreview = that.options.previewPane;\n                if (!enablePreview) {\n                    return;\n                }\n                that.preview = $('<div />').addClass(fileManagerStyles.preview);\n                that.previewContainer = $('<div />').addClass(fileManagerStyles.previewContainer);\n                that.preview.append(that.previewContainer);\n                that._setPreviewPaneContent();\n                that.contentContainer.append(that.preview.hide());\n            },\n            _setPreviewPaneContent: function () {\n                var that = this, options = that.options, previewPaneMessages = options.messages.previewPane, previewPaneOptions = options.previewPane, selection = that.getSelected(), previewTemplate;\n                if (!selection) {\n                    previewTemplate = template(previewPaneOptions.noFileTemplate)({ messages: previewPaneMessages });\n                    that.previewContainer.html(previewTemplate);\n                    return;\n                }\n                previewTemplate = selection.length === 1 ? previewPaneOptions.singleFileTemplate : previewPaneOptions.multipleFilesTemplate;\n                previewTemplate = template(previewTemplate)({\n                    styles: fileManagerTemplateStyles,\n                    messages: previewPaneMessages,\n                    selection: selection,\n                    metaFields: previewPaneOptions.metaFields\n                });\n                that.previewContainer.html(previewTemplate);\n            },\n            _initToolbar: function () {\n                var that = this, options = that.options, toolbarElement = $('<div />').addClass(fileManagerStyles.toolbar), toolbarOptions = extend({}, options.toolbar, {\n                        filemanager: this,\n                        messages: options.messages.toolbar,\n                        action: that.executeCommand.bind(that)\n                    });\n                that.toolbar = new ui.filemanager.ToolBar(toolbarElement, toolbarOptions);\n                return that.toolbar;\n            },\n            _initTreeView: function () {\n                var that = this, treeViewElement = $('<div />').addClass(fileManagerStyles.treeview), options = that.options.views[TREE_TYPE], explicitOptions = extend(true, {}, {\n                        dataSource: that.options.dataSource,\n                        messages: that.options.messages.views,\n                        draggable: that.options.draggable,\n                        isLocalBinding: that.dataSource.isLocalBinding\n                    });\n                that.treeView = new ui.filemanager.ViewComponents[TREE_TYPE](treeViewElement, options, explicitOptions);\n                that.treeView.bind(NAVIGATE, proxy(that._navigate, that)).bind(LOAD, proxy(that._load, that)).bind(DROP, proxy(that._drop, that)).bind(KEYDOWNACTION, proxy(that._keydownAction, that));\n                return that.treeView;\n            },\n            _drop: function (ev) {\n                var that = this;\n                if (!that.trigger(DROP, ev) && ev.items.indexOf(ev.target) < 0) {\n                    that._confirm('move').done(function () {\n                        that.executeCommand({\n                            command: 'CopyCommand',\n                            options: ev\n                        });\n                    }).fail(function () {\n                        that.executeCommand({\n                            command: 'MoveCommand',\n                            options: ev\n                        });\n                    });\n                }\n            },\n            _keydownAction: function (ev) {\n                var that = this, keyCode = ev.keyCode, keys = kendo.keys;\n                if (keyCode === keys.DELETE) {\n                    that.executeCommand({\n                        command: 'DeleteCommand',\n                        options: { target: ev.target }\n                    });\n                }\n                if (keyCode === keys.F2 && that._viewType !== 'grid') {\n                    that.executeCommand({\n                        command: 'RenameCommand',\n                        options: { target: ev.target }\n                    });\n                }\n            },\n            _confirm: function (type) {\n                var messages = this.options.messages.dialogs[type + 'Confirm'];\n                var confirm = $('<div></div>').kendoConfirm(extend({}, {\n                    title: messages.title,\n                    content: messages.content,\n                    messages: messages\n                }, this.options.dialogs[type + 'Confirm'])).data('kendoConfirm');\n                confirm.open();\n                confirm.wrapper.removeClass('k-confirm');\n                return confirm.result;\n            },\n            _prompt: function (type, defaultInput) {\n                var messages = this.options.messages.dialogs[type + 'Prompt'];\n                var prompt = $('<div></div>').kendoPrompt(extend({}, {\n                    title: messages.title,\n                    content: messages.content,\n                    messages: messages,\n                    value: defaultInput\n                }, this.options.dialogs[type + 'Prompt'])).data('kendoPrompt');\n                prompt.open();\n                prompt.wrapper.removeClass('k-prompt');\n                return prompt.result;\n            },\n            _initView: function () {\n                var that = this, viewWrapper = $('<div />').addClass(fileManagerStyles.view), initialView = that.options.initialView;\n                that.viewWrapper = viewWrapper;\n                that.viewWrapper.append(that.view(initialView));\n                return viewWrapper;\n            },\n            _initBreadcrumb: function () {\n                var that = this, options = that.options, breadcrumbElement = $('<nav />').addClass(fileManagerStyles.breadcrumb), breadcrumbOptions = extend({}, {\n                        items: [{\n                                type: 'rootitem',\n                                text: ''\n                            }],\n                        change: proxy(that._breadcrumbChange, that)\n                    }, options.breadcrumb);\n                that.breadcrumb = new ui.Breadcrumb(breadcrumbElement, breadcrumbOptions);\n                return that.breadcrumb;\n            },\n            _breadcrumbChange: function (ev) {\n                this._navigate({ path: ev.value });\n            },\n            _initUploadDialog: function () {\n                var that = this, options = that.options, toolbar = that.toolbar, dialogMessages = options.messages.dialogs.upload, dialogElement = $('<div />'), dialogOptions = extend({}, {\n                        title: dialogMessages.title,\n                        modal: true,\n                        visible: false,\n                        width: 500,\n                        actions: [\n                            {\n                                text: dialogMessages.clear,\n                                action: proxy(that._clearUploadFilesList, that)\n                            },\n                            {\n                                text: dialogMessages.done,\n                                primary: true\n                            }\n                        ],\n                        messages: dialogMessages\n                    }, options.dialogs.upload), uploadInstance;\n                if (toolbar && !toolbar.isToolEnabled(toolbar.defaultTools.upload.name)) {\n                    return;\n                }\n                uploadInstance = that._initUpload();\n                that.uploadDialog = new ui.Dialog(dialogElement, dialogOptions);\n                that.uploadDialog.wrapper.addClass(fileManagerStyles.uploadDialog);\n                that.uploadDialog.element.append(uploadInstance.wrapper);\n                that.uploadDialog.bind(OPEN, proxy(that._toggleUploadDropZone, that, ''));\n                that.uploadDialog.bind(CLOSE, proxy(that._toggleUploadDropZone, that, that.viewWrapper));\n                return that.uploadDialog;\n            },\n            _initUpload: function () {\n                var that = this, options = that.options, uploadElement = $('<input type=\\'file\\' name=\\'file\\'/>').addClass(fileManagerStyles.upload), uploadOptions = extend(true, {\n                        async: {\n                            autoUpload: true,\n                            saveUrl: options.uploadUrl\n                        },\n                        dropZone: that.viewWrapper\n                    }, options.upload);\n                that.upload = new ui.Upload(uploadElement[0], uploadOptions);\n                that.upload.bind(UPLOAD, proxy(that._sendUploadPathParameter, that));\n                that.upload.bind(SUCCESS, proxy(that._success, that));\n                return that.upload;\n            },\n            _sendUploadPathParameter: function (ev) {\n                ev.data = { path: this.path() };\n            },\n            _success: function () {\n                this._view.widgetComponent.dataSource.read();\n            },\n            _clearUploadFilesList: function () {\n                var that = this, upload = that.upload;\n                if (upload) {\n                    upload.clearAllFiles();\n                }\n            },\n            _toggleUploadDropZone: function (zone) {\n                var that = this, upload = that.upload;\n                if (upload) {\n                    upload.setOptions({ dropZone: zone });\n                }\n            },\n            _binding: function (ev) {\n                if (this.trigger(DATABINDING, {\n                        source: 'view',\n                        action: ev.action,\n                        items: ev.items,\n                        index: ev.index\n                    })) {\n                    ev.preventDefault();\n                }\n            },\n            _bound: function () {\n                if (this.options.previewPane) {\n                    this._setPreviewPaneContent();\n                }\n                this.trigger(DATABOUND);\n            },\n            _createResizableSplitBar: function (cssClass) {\n                var splitBar = $('<div />').addClass(fileManagerStyles.splitBar).addClass(fileManagerStyles.splitBarHorizontal).addClass(cssClass), icon = $('<span />').addClass(fileManagerStyles.splitBarIcon);\n                splitBar.append(icon);\n                splitBar.hover(function () {\n                    $(this).toggleClass(fileManagerStyles.splitBarHover);\n                });\n                return splitBar;\n            },\n            _initResizableNavigation: function () {\n                var that = this, wrapper = that.wrapper, splitBar = that._createResizableSplitBar(fileManagerStyles.splitBarNavigation), contentWrapper = wrapper.find(DOT + fileManagerStyles.content), navigationWrapper = wrapper.find(DOT + fileManagerStyles.navigation), contentWrapperWidth, navigationWrapperWidth;\n                splitBar.insertAfter(navigationWrapper);\n                that._resizeDraggable.navigation = that.wrapper.find(splitBar).end().kendoResizable({\n                    handle: DOT + fileManagerStyles.splitBarNavigation,\n                    start: function () {\n                        contentWrapperWidth = contentWrapper.width();\n                        navigationWrapperWidth = navigationWrapper.width();\n                    },\n                    resize: function (e) {\n                        var delta = e.x.initialDelta;\n                        if (kendo.support.isRtl(wrapper)) {\n                            delta *= -1;\n                        }\n                        if (navigationWrapperWidth + delta < -2 || contentWrapperWidth - delta < -2) {\n                            return;\n                        }\n                        navigationWrapper.width(navigationWrapperWidth + delta);\n                    }\n                }).getKendoResizable();\n            },\n            _initResizablePreview: function () {\n                var that = this, wrapper = that.wrapper, splitBar = that._createResizableSplitBar(fileManagerStyles.splitBarPreview), contentWrapper = wrapper.find(DOT + fileManagerStyles.content), previewWrapper = wrapper.find(DOT + fileManagerStyles.preview), contentWrapperWidth, previewWrapperWidth;\n                if (!that.options.previewPane) {\n                    return;\n                }\n                splitBar.insertBefore(previewWrapper).hide();\n                that._resizeDraggable.preview = wrapper.find(splitBar).end().kendoResizable({\n                    handle: DOT + fileManagerStyles.splitBarPreview,\n                    start: function () {\n                        contentWrapperWidth = contentWrapper.width();\n                        previewWrapperWidth = previewWrapper.width();\n                    },\n                    resize: function (e) {\n                        var delta = e.x.initialDelta;\n                        if (kendo.support.isRtl(wrapper)) {\n                            delta *= -1;\n                        }\n                        if (previewWrapperWidth - delta < -2 || contentWrapperWidth + delta < -2) {\n                            return;\n                        }\n                        previewWrapper.width(previewWrapperWidth - delta);\n                    }\n                }).getKendoResizable();\n            },\n            _resizable: function () {\n                var that = this, options = that.options;\n                that._resizeDraggable = {};\n                if (!options.resizable) {\n                    return;\n                }\n                that.wrapper.addClass(fileManagerStyles.resizable);\n                that._initResizableNavigation();\n                that._initResizablePreview();\n            },\n            view: function (type) {\n                var that = this, element = $('<div></div>'), options = that.options.views[type], explicitOptions = extend(true, {}, {\n                        dataSource: that._viewDataSource || that.dataSource,\n                        messages: that.options.messages.views,\n                        draggable: that.options.draggable\n                    });\n                if (type === undefined) {\n                    return that._view;\n                }\n                if (!ui.filemanager.ViewComponents[type]) {\n                    throw new Error(kendo.format('There is no {0} ViewComponent registered!', type));\n                }\n                if (that._view && that._view.destroy) {\n                    that._view.destroy();\n                    that.viewWrapper.empty();\n                }\n                that._viewType = type;\n                that._view = new ui.filemanager.ViewComponents[type](element, options, explicitOptions);\n                that._view.bind(SELECT, proxy(that._select, that));\n                that._view.bind(OPEN, proxy(that._open, that));\n                that._view.bind(DATABINDING, proxy(that._binding, that));\n                that._view.bind(DATABOUND, proxy(that._bound, that));\n                that._view.bind(DROP, proxy(that._drop, that));\n                that._view.bind(KEYDOWNACTION, proxy(that._keydownAction, that));\n                that._view.element.addClass(fileManagerStyles[type]);\n                that.viewWrapper.removeClass(Object.keys(ui.filemanager.ViewComponents).map(function (el) {\n                    return fileManagerStyles.view + '-' + el;\n                }).join(' ')).addClass(fileManagerStyles.view + '-' + type);\n                that.viewWrapper.append(that._view.element);\n            },\n            executeCommand: function (args) {\n                var commandName = args.command, commandOptions = extend({ filemanager: this }, isPlainObject(args.options) ? args.options : { value: args.options }), command = new ui.filemanager.commands[commandName](commandOptions);\n                if (!this.trigger(EXECUTE, args)) {\n                    return command.exec();\n                }\n            },\n            _navigate: function (ev) {\n                var that = this, path = ev.path;\n                if (!that.trigger(NAVIGATE, { path: path })) {\n                    that.navigate(path);\n                }\n            },\n            _load: function (ev) {\n                var entry = this.dataSource.get(ev.entryId);\n                entry.load();\n            },\n            _select: function (ev) {\n                if (this.options.previewPane) {\n                    this._setPreviewPaneContent();\n                }\n                this.trigger(SELECT, { entries: ev.entries });\n            },\n            _open: function (ev) {\n                var that = this, entry = ev.entry;\n                that.trigger(OPEN, { entry: entry });\n                if (entry.isDirectory) {\n                    that._navigate({ path: entry.id });\n                }\n            },\n            _change: function (ev) {\n                var that = this, targetDataSource = ev.node ? ev.node.children : that.dataSource;\n                if (that.trigger(DATABINDING, {\n                        source: 'tree',\n                        action: ev.action,\n                        items: ev.items,\n                        index: ev.index\n                    })) {\n                    return;\n                }\n                that.treeView._refreshDataSource(ev);\n                if (ev.action === 'remove' || ev.action === 'itemchange' || ev.action === 'add') {\n                    targetDataSource.sync();\n                }\n                if (ev.action === 'remove' && that._viewDataSource && that._viewDataSource.parent() && ev.items[0] === that._viewDataSource.parent()) {\n                    var parentNodePath = ev.items[0].parentNode() ? ev.items[0].parentNode().id : '';\n                    that._navigate({ path: parentNodePath });\n                }\n            },\n            _buildBreadcrumbPath: function (entry) {\n                var that = this, breadcrumb = that.breadcrumb, values = [];\n                while (entry) {\n                    values.push(entry.name);\n                    entry = entry.parentNode();\n                }\n                values.push('');\n                breadcrumb.value(values.reverse().join('/'));\n            },\n            _adjustDimensions: function () {\n                var that = this, wrapper = that.wrapper, gridSelector = DOT + fileManagerStyles.grid, listViewSelector = DOT + fileManagerStyles.list, contentContainer = DOT + fileManagerStyles.contentContainer, totalHeight = wrapper.height(), toolbarHeight = 0, breadcrumbHeight = 0;\n                if (that.toolbar) {\n                    toolbarHeight = outerHeight(that.toolbar.wrapper);\n                }\n                if (that.breadcrumb) {\n                    breadcrumbHeight = outerHeight(that.breadcrumb.wrapper);\n                }\n                if (that.options.height !== 'auto') {\n                    wrapper.find([gridSelector].join(',')).height(totalHeight - (toolbarHeight + breadcrumbHeight + 1));\n                    wrapper.find(listViewSelector).parent().height(totalHeight - (toolbarHeight + breadcrumbHeight + 1));\n                    wrapper.find(contentContainer).height(totalHeight - toolbarHeight);\n                }\n            },\n            _resize: function () {\n                this._adjustDimensions();\n                kendo.resize(this.element.children());\n            },\n            setDataSource: function (dataSource) {\n                var that = this;\n                that.options.dataSource = dataSource;\n                that._dataSource();\n                if (that.toolbar) {\n                    that.toolbar.destroy();\n                    that.header.empty();\n                    that.header.append(that._initToolbar().element);\n                }\n                if (that.treeView) {\n                    that.treeView.destroy();\n                    that.navigationContainer.empty();\n                    that.navigationContainer.append(that._initTreeView().element);\n                }\n                if (that._view) {\n                    that.view(that._viewType || that.options.initialView);\n                }\n                that._initContextMenu();\n            },\n            refresh: function () {\n                var that = this, dataSource = that._viewDataSource || that.dataSource;\n                dataSource.read();\n            },\n            getSize: function () {\n                return kendo.dimensions(this.wrapper);\n            },\n            getSelected: function () {\n                var that = this, items = that._view.getSelected(), treeView = that.treeView;\n                if (items && items.length) {\n                    return items;\n                }\n                var item = treeView.getSelected();\n                if (item) {\n                    return [that.dataSource.get(item.id)];\n                }\n            },\n            path: function () {\n                return this._path || '';\n            },\n            navigate: function (path) {\n                var that = this, dataSource = that.dataSource, entry = dataSource.get(path.replace(/^\\//, '')), view = that._view, treeView = that.treeView, breadcrumb = that.breadcrumb;\n                that._path = path;\n                if (that.trigger(DATABINDING, {\n                        source: 'navigation',\n                        action: 'rebind',\n                        items: [entry]\n                    })) {\n                    return;\n                }\n                if (breadcrumb) {\n                    that._buildBreadcrumbPath(entry);\n                }\n                if (path === '' || path === '/') {\n                    dataSource.sort([\n                        that.folderSortOption,\n                        that.defaultSortOption\n                    ]);\n                    that._viewDataSource = dataSource;\n                    view.refresh(that._viewDataSource);\n                    treeView.treeView.select($());\n                    if (that.options.previewPane) {\n                        that._setPreviewPaneContent();\n                    }\n                    return;\n                }\n                if (entry.loaded && !entry.loaded()) {\n                    entry.load();\n                }\n                if (view) {\n                    that._viewDataSource = entry.children;\n                    view.refresh(that._viewDataSource);\n                    that._viewDataSource.sort([\n                        that.folderSortOption,\n                        that.defaultSortOption\n                    ]);\n                }\n                if (treeView) {\n                    treeView.refresh(entry.id);\n                }\n                if (that.options.previewPane) {\n                    that._setPreviewPaneContent();\n                }\n            },\n            destroy: function () {\n                var that = this;\n                DataBoundWidget.fn.destroy.call(that);\n                that.dataSource.unbind(ERROR, that._errorHandler).unbind(CHANGE, that._changeHandler);\n                if (that._resizeDraggable.navigation) {\n                    that._resizeDraggable.navigation.destroy();\n                    that._resizeDraggable.navigation = null;\n                }\n                if (that._resizeDraggable.preview) {\n                    that._resizeDraggable.preview.destroy();\n                    that._resizeDraggable.preview = null;\n                }\n                if (that.uploadDialog) {\n                    that.uploadDialog.destroy();\n                    that.uploadDialog = null;\n                }\n                if (that.upload) {\n                    that.upload.destroy();\n                    that.upload = null;\n                }\n                if (that.contextMenu) {\n                    that.contextMenu.destroy();\n                    that.contextMenu = null;\n                }\n                kendo.unbindResize(that._resizeHandler);\n                that.dataSource = null;\n                that._viewDataSource = null;\n                kendo.destroy(that.element);\n            }\n        });\n        ui.plugin(FileManager);\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"]}